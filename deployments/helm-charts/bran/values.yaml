# Application Configuration
app:
  name: bran
  namespace: cncf-bran

# Image Configuration
image:
  repository: public.ecr.aws/o9l3s9p6/cncf-bran
  tag: v1.0.1
  pullPolicy: IfNotPresent

# Service Configuration
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

# Deployment Configuration
deployment:
  replicaCount: 1
  
# Resources
resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

# HPA Configuration
hpa:
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 50

# Ingress Configuration
ingress:
  host: akashpawar.com
  certificateArn: 'arn:aws:acm:us-east-1:982534355700:certificate/f744adec-d79a-4af8-9476-c507f5a7fe9f'
  loadBalancerName: cncf-alb
  groupName: cncf-shared

# Health Check Configuration
healthCheck:
  path: /bran/metrics
  port: 8000

# Database Configuration
database:
  name: postgres-db
  image: postgres:15
  port: 5432
  dbName: cncf
  user: akash
  password: akashpass

# Secrets Configuration
secrets:
  # secretKey: django-insecure-8j=hrs#^z0t%#1^89isbgqeddf2_zw!#zh45rz-=h&u%ze)o3e
  # allowedHosts: "*"
  # debug: "true"
  # timeZone: "UTC"
  external: 
    name: bran-external-secret



# Network Policy Configuration
networkPolicy:
  enabled: true
  allowALB: true                       # Allow ALB/external traffic
  allowPrometheus: true                # Allow Prometheus monitoring
  prometheusNamespace: "observability"    # Prometheus namespace